2023-04-09 22:13:36,822:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-09 22:13:36,822:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-09 22:13:36,822:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-09 22:13:36,822:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-09 22:13:38,083:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-09 22:14:02,970:INFO:PyCaret ClassificationExperiment
2023-04-09 22:14:02,972:INFO:Logging name: clf-default-name
2023-04-09 22:14:02,972:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-09 22:14:02,972:INFO:version 3.0.0.rc9
2023-04-09 22:14:02,972:INFO:Initializing setup()
2023-04-09 22:14:02,972:INFO:self.USI: 3e93
2023-04-09 22:14:02,972:INFO:self._variable_keys: {'logging_param', 'exp_id', 'gpu_n_jobs_param', 'target_param', '_available_plots', 'is_multiclass', 'y_test', 'n_jobs_param', '_ml_usecase', 'X', 'y', 'pipeline', 'idx', 'memory', 'data', 'seed', 'X_train', 'fold_groups_param', 'y_train', 'USI', 'html_param', 'fold_shuffle_param', 'fold_generator', 'X_test', 'fix_imbalance', 'gpu_param', 'log_plots_param', 'exp_name_log'}
2023-04-09 22:14:02,972:INFO:Checking environment
2023-04-09 22:14:02,972:INFO:python_version: 3.9.13
2023-04-09 22:14:02,972:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-04-09 22:14:02,972:INFO:machine: AMD64
2023-04-09 22:14:02,972:INFO:platform: Windows-10-10.0.22621-SP0
2023-04-09 22:14:02,972:INFO:Memory: svmem(total=8415133696, available=1715265536, percent=79.6, used=6699868160, free=1715265536)
2023-04-09 22:14:02,972:INFO:Physical Core: 4
2023-04-09 22:14:02,972:INFO:Logical Core: 8
2023-04-09 22:14:02,972:INFO:Checking libraries
2023-04-09 22:14:02,972:INFO:System:
2023-04-09 22:14:02,972:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-04-09 22:14:02,972:INFO:executable: C:\Users\Kim\anaconda3\python.exe
2023-04-09 22:14:02,972:INFO:   machine: Windows-10-10.0.22621-SP0
2023-04-09 22:14:02,972:INFO:PyCaret required dependencies:
2023-04-09 22:14:02,973:INFO:                 pip: 22.3.1
2023-04-09 22:14:02,973:INFO:          setuptools: 64.0.2
2023-04-09 22:14:02,973:INFO:             pycaret: 3.0.0rc9
2023-04-09 22:14:02,973:INFO:             IPython: 8.9.0
2023-04-09 22:14:02,973:INFO:          ipywidgets: 7.6.5
2023-04-09 22:14:02,973:INFO:                tqdm: 4.64.1
2023-04-09 22:14:02,973:INFO:               numpy: 1.23.5
2023-04-09 22:14:02,973:INFO:              pandas: 1.5.3
2023-04-09 22:14:02,973:INFO:              jinja2: 3.1.2
2023-04-09 22:14:02,973:INFO:               scipy: 1.9.1
2023-04-09 22:14:02,973:INFO:              joblib: 1.2.0
2023-04-09 22:14:02,974:INFO:             sklearn: 1.2.1
2023-04-09 22:14:02,974:INFO:                pyod: 1.0.8
2023-04-09 22:14:02,974:INFO:            imblearn: 0.10.1
2023-04-09 22:14:02,974:INFO:   category_encoders: 2.6.0
2023-04-09 22:14:02,974:INFO:            lightgbm: 3.3.5
2023-04-09 22:14:02,974:INFO:               numba: 0.56.4
2023-04-09 22:14:02,974:INFO:            requests: 2.28.1
2023-04-09 22:14:02,974:INFO:          matplotlib: 3.7.0
2023-04-09 22:14:02,974:INFO:          scikitplot: 0.3.7
2023-04-09 22:14:02,974:INFO:         yellowbrick: 1.5
2023-04-09 22:14:02,974:INFO:              plotly: 5.13.0
2023-04-09 22:14:02,974:INFO:             kaleido: 0.2.1
2023-04-09 22:14:02,974:INFO:         statsmodels: 0.13.5
2023-04-09 22:14:02,974:INFO:              sktime: 0.16.1
2023-04-09 22:14:02,974:INFO:               tbats: 1.1.2
2023-04-09 22:14:02,974:INFO:            pmdarima: 2.0.2
2023-04-09 22:14:02,974:INFO:              psutil: 5.9.0
2023-04-09 22:14:02,974:INFO:PyCaret optional dependencies:
2023-04-09 22:14:02,984:INFO:                shap: 0.41.0
2023-04-09 22:14:02,984:INFO:           interpret: Not installed
2023-04-09 22:14:02,984:INFO:                umap: Not installed
2023-04-09 22:14:02,984:INFO:    pandas_profiling: 3.5.0
2023-04-09 22:14:02,984:INFO:  explainerdashboard: Not installed
2023-04-09 22:14:02,984:INFO:             autoviz: Not installed
2023-04-09 22:14:02,984:INFO:           fairlearn: Not installed
2023-04-09 22:14:02,984:INFO:             xgboost: 1.7.4
2023-04-09 22:14:02,985:INFO:            catboost: Not installed
2023-04-09 22:14:02,985:INFO:              kmodes: Not installed
2023-04-09 22:14:02,985:INFO:             mlxtend: Not installed
2023-04-09 22:14:02,985:INFO:       statsforecast: Not installed
2023-04-09 22:14:02,985:INFO:        tune_sklearn: Not installed
2023-04-09 22:14:02,985:INFO:                 ray: Not installed
2023-04-09 22:14:02,985:INFO:            hyperopt: Not installed
2023-04-09 22:14:02,985:INFO:              optuna: Not installed
2023-04-09 22:14:02,985:INFO:               skopt: Not installed
2023-04-09 22:14:02,985:INFO:              mlflow: 2.2.1
2023-04-09 22:14:02,985:INFO:              gradio: Not installed
2023-04-09 22:14:02,985:INFO:             fastapi: Not installed
2023-04-09 22:14:02,985:INFO:             uvicorn: Not installed
2023-04-09 22:14:02,985:INFO:              m2cgen: Not installed
2023-04-09 22:14:02,985:INFO:           evidently: Not installed
2023-04-09 22:14:02,985:INFO:               fugue: Not installed
2023-04-09 22:14:02,985:INFO:           streamlit: Not installed
2023-04-09 22:14:02,985:INFO:             prophet: Not installed
2023-04-09 22:14:02,985:INFO:None
2023-04-09 22:14:02,985:INFO:Set up data.
2023-04-09 22:29:35,969:INFO:PyCaret ClassificationExperiment
2023-04-09 22:29:35,969:INFO:Logging name: clf-default-name
2023-04-09 22:29:35,969:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-09 22:29:35,969:INFO:version 3.0.0.rc9
2023-04-09 22:29:35,969:INFO:Initializing setup()
2023-04-09 22:29:35,969:INFO:self.USI: 8fc3
2023-04-09 22:29:35,969:INFO:self._variable_keys: {'logging_param', 'exp_id', 'gpu_n_jobs_param', 'target_param', '_available_plots', 'is_multiclass', 'y_test', 'n_jobs_param', '_ml_usecase', 'X', 'y', 'pipeline', 'idx', 'memory', 'data', 'seed', 'X_train', 'fold_groups_param', 'y_train', 'USI', 'html_param', 'fold_shuffle_param', 'fold_generator', 'X_test', 'fix_imbalance', 'gpu_param', 'log_plots_param', 'exp_name_log'}
2023-04-09 22:29:35,969:INFO:Checking environment
2023-04-09 22:29:35,969:INFO:python_version: 3.9.13
2023-04-09 22:29:35,969:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-04-09 22:29:35,969:INFO:machine: AMD64
2023-04-09 22:29:35,970:INFO:platform: Windows-10-10.0.22621-SP0
2023-04-09 22:29:35,970:INFO:Memory: svmem(total=8415133696, available=1581785088, percent=81.2, used=6833348608, free=1581785088)
2023-04-09 22:29:35,970:INFO:Physical Core: 4
2023-04-09 22:29:35,970:INFO:Logical Core: 8
2023-04-09 22:29:35,970:INFO:Checking libraries
2023-04-09 22:29:35,970:INFO:System:
2023-04-09 22:29:35,970:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-04-09 22:29:35,970:INFO:executable: C:\Users\Kim\anaconda3\python.exe
2023-04-09 22:29:35,970:INFO:   machine: Windows-10-10.0.22621-SP0
2023-04-09 22:29:35,970:INFO:PyCaret required dependencies:
2023-04-09 22:29:35,970:INFO:                 pip: 22.3.1
2023-04-09 22:29:35,970:INFO:          setuptools: 64.0.2
2023-04-09 22:29:35,970:INFO:             pycaret: 3.0.0rc9
2023-04-09 22:29:35,970:INFO:             IPython: 8.9.0
2023-04-09 22:29:35,970:INFO:          ipywidgets: 7.6.5
2023-04-09 22:29:35,970:INFO:                tqdm: 4.64.1
2023-04-09 22:29:35,970:INFO:               numpy: 1.23.5
2023-04-09 22:29:35,970:INFO:              pandas: 1.5.3
2023-04-09 22:29:35,970:INFO:              jinja2: 3.1.2
2023-04-09 22:29:35,970:INFO:               scipy: 1.9.1
2023-04-09 22:29:35,971:INFO:              joblib: 1.2.0
2023-04-09 22:29:35,971:INFO:             sklearn: 1.2.1
2023-04-09 22:29:35,971:INFO:                pyod: 1.0.8
2023-04-09 22:29:35,971:INFO:            imblearn: 0.10.1
2023-04-09 22:29:35,971:INFO:   category_encoders: 2.6.0
2023-04-09 22:29:35,971:INFO:            lightgbm: 3.3.5
2023-04-09 22:29:35,971:INFO:               numba: 0.56.4
2023-04-09 22:29:35,971:INFO:            requests: 2.28.1
2023-04-09 22:29:35,971:INFO:          matplotlib: 3.7.0
2023-04-09 22:29:35,972:INFO:          scikitplot: 0.3.7
2023-04-09 22:29:35,972:INFO:         yellowbrick: 1.5
2023-04-09 22:29:35,972:INFO:              plotly: 5.13.0
2023-04-09 22:29:35,972:INFO:             kaleido: 0.2.1
2023-04-09 22:29:35,972:INFO:         statsmodels: 0.13.5
2023-04-09 22:29:35,972:INFO:              sktime: 0.16.1
2023-04-09 22:29:35,972:INFO:               tbats: 1.1.2
2023-04-09 22:29:35,972:INFO:            pmdarima: 2.0.2
2023-04-09 22:29:35,972:INFO:              psutil: 5.9.0
2023-04-09 22:29:35,972:INFO:PyCaret optional dependencies:
2023-04-09 22:29:35,972:INFO:                shap: 0.41.0
2023-04-09 22:29:35,972:INFO:           interpret: Not installed
2023-04-09 22:29:35,973:INFO:                umap: Not installed
2023-04-09 22:29:35,973:INFO:    pandas_profiling: 3.5.0
2023-04-09 22:29:35,973:INFO:  explainerdashboard: Not installed
2023-04-09 22:29:35,973:INFO:             autoviz: Not installed
2023-04-09 22:29:35,973:INFO:           fairlearn: Not installed
2023-04-09 22:29:35,973:INFO:             xgboost: 1.7.4
2023-04-09 22:29:35,973:INFO:            catboost: Not installed
2023-04-09 22:29:35,973:INFO:              kmodes: Not installed
2023-04-09 22:29:35,973:INFO:             mlxtend: Not installed
2023-04-09 22:29:35,973:INFO:       statsforecast: Not installed
2023-04-09 22:29:35,973:INFO:        tune_sklearn: Not installed
2023-04-09 22:29:35,973:INFO:                 ray: Not installed
2023-04-09 22:29:35,973:INFO:            hyperopt: Not installed
2023-04-09 22:29:35,973:INFO:              optuna: Not installed
2023-04-09 22:29:35,973:INFO:               skopt: Not installed
2023-04-09 22:29:35,973:INFO:              mlflow: 2.2.1
2023-04-09 22:29:35,973:INFO:              gradio: Not installed
2023-04-09 22:29:35,973:INFO:             fastapi: Not installed
2023-04-09 22:29:35,973:INFO:             uvicorn: Not installed
2023-04-09 22:29:35,973:INFO:              m2cgen: Not installed
2023-04-09 22:29:35,973:INFO:           evidently: Not installed
2023-04-09 22:29:35,973:INFO:               fugue: Not installed
2023-04-09 22:29:35,973:INFO:           streamlit: Not installed
2023-04-09 22:29:35,973:INFO:             prophet: Not installed
2023-04-09 22:29:35,973:INFO:None
2023-04-09 22:29:35,974:INFO:Set up data.
2023-04-09 22:29:36,322:INFO:Set up train/test split.
2023-04-09 22:29:36,413:INFO:Set up index.
2023-04-09 22:29:36,418:INFO:Set up folding strategy.
2023-04-09 22:29:36,418:INFO:Assigning column types.
2023-04-09 22:29:36,427:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-09 22:29:36,475:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-09 22:29:36,477:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 22:29:36,518:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 22:29:36,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 22:29:36,679:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-09 22:29:36,680:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 22:29:36,717:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 22:29:36,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 22:29:36,721:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-09 22:29:36,785:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 22:29:36,814:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 22:29:36,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 22:29:36,859:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 22:29:36,888:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 22:29:36,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 22:29:36,891:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-09 22:29:36,962:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 22:29:36,965:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 22:29:37,043:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 22:29:37,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 22:29:37,061:INFO:Preparing preprocessing pipeline...
2023-04-09 22:29:37,064:INFO:Set up label encoding.
2023-04-09 22:29:37,064:INFO:Set up simple imputation.
2023-04-09 22:29:37,089:INFO:Set up encoding of ordinal features.
2023-04-09 22:29:37,096:INFO:Set up encoding of categorical features.
2023-04-09 22:59:38,496:INFO:PyCaret ClassificationExperiment
2023-04-09 22:59:38,496:INFO:Logging name: clf-default-name
2023-04-09 22:59:38,496:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-09 22:59:38,496:INFO:version 3.0.0.rc9
2023-04-09 22:59:38,496:INFO:Initializing setup()
2023-04-09 22:59:38,496:INFO:self.USI: 2be1
2023-04-09 22:59:38,497:INFO:self._variable_keys: {'logging_param', 'exp_id', 'gpu_n_jobs_param', 'target_param', '_available_plots', 'is_multiclass', 'y_test', 'n_jobs_param', '_ml_usecase', 'X', 'y', 'pipeline', 'idx', 'memory', 'data', 'seed', 'X_train', 'fold_groups_param', 'y_train', 'USI', 'html_param', 'fold_shuffle_param', 'fold_generator', 'X_test', 'fix_imbalance', 'gpu_param', 'log_plots_param', 'exp_name_log'}
2023-04-09 22:59:38,497:INFO:Checking environment
2023-04-09 22:59:38,497:INFO:python_version: 3.9.13
2023-04-09 22:59:38,497:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-04-09 22:59:38,497:INFO:machine: AMD64
2023-04-09 22:59:38,497:INFO:platform: Windows-10-10.0.22621-SP0
2023-04-09 22:59:38,497:INFO:Memory: svmem(total=8415133696, available=2023182336, percent=76.0, used=6391951360, free=2023182336)
2023-04-09 22:59:38,498:INFO:Physical Core: 4
2023-04-09 22:59:38,498:INFO:Logical Core: 8
2023-04-09 22:59:38,498:INFO:Checking libraries
2023-04-09 22:59:38,498:INFO:System:
2023-04-09 22:59:38,498:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-04-09 22:59:38,498:INFO:executable: C:\Users\Kim\anaconda3\python.exe
2023-04-09 22:59:38,498:INFO:   machine: Windows-10-10.0.22621-SP0
2023-04-09 22:59:38,498:INFO:PyCaret required dependencies:
2023-04-09 22:59:38,498:INFO:                 pip: 22.3.1
2023-04-09 22:59:38,498:INFO:          setuptools: 64.0.2
2023-04-09 22:59:38,498:INFO:             pycaret: 3.0.0rc9
2023-04-09 22:59:38,498:INFO:             IPython: 8.9.0
2023-04-09 22:59:38,498:INFO:          ipywidgets: 7.6.5
2023-04-09 22:59:38,498:INFO:                tqdm: 4.64.1
2023-04-09 22:59:38,499:INFO:               numpy: 1.23.5
2023-04-09 22:59:38,499:INFO:              pandas: 1.5.3
2023-04-09 22:59:38,499:INFO:              jinja2: 3.1.2
2023-04-09 22:59:38,499:INFO:               scipy: 1.9.1
2023-04-09 22:59:38,499:INFO:              joblib: 1.2.0
2023-04-09 22:59:38,499:INFO:             sklearn: 1.2.1
2023-04-09 22:59:38,499:INFO:                pyod: 1.0.8
2023-04-09 22:59:38,499:INFO:            imblearn: 0.10.1
2023-04-09 22:59:38,499:INFO:   category_encoders: 2.6.0
2023-04-09 22:59:38,499:INFO:            lightgbm: 3.3.5
2023-04-09 22:59:38,499:INFO:               numba: 0.56.4
2023-04-09 22:59:38,499:INFO:            requests: 2.28.1
2023-04-09 22:59:38,499:INFO:          matplotlib: 3.7.0
2023-04-09 22:59:38,499:INFO:          scikitplot: 0.3.7
2023-04-09 22:59:38,499:INFO:         yellowbrick: 1.5
2023-04-09 22:59:38,499:INFO:              plotly: 5.13.0
2023-04-09 22:59:38,499:INFO:             kaleido: 0.2.1
2023-04-09 22:59:38,500:INFO:         statsmodels: 0.13.5
2023-04-09 22:59:38,500:INFO:              sktime: 0.16.1
2023-04-09 22:59:38,500:INFO:               tbats: 1.1.2
2023-04-09 22:59:38,500:INFO:            pmdarima: 2.0.2
2023-04-09 22:59:38,500:INFO:              psutil: 5.9.0
2023-04-09 22:59:38,500:INFO:PyCaret optional dependencies:
2023-04-09 22:59:38,500:INFO:                shap: 0.41.0
2023-04-09 22:59:38,500:INFO:           interpret: Not installed
2023-04-09 22:59:38,500:INFO:                umap: Not installed
2023-04-09 22:59:38,500:INFO:    pandas_profiling: 3.5.0
2023-04-09 22:59:38,500:INFO:  explainerdashboard: Not installed
2023-04-09 22:59:38,500:INFO:             autoviz: Not installed
2023-04-09 22:59:38,500:INFO:           fairlearn: Not installed
2023-04-09 22:59:38,500:INFO:             xgboost: 1.7.4
2023-04-09 22:59:38,500:INFO:            catboost: Not installed
2023-04-09 22:59:38,500:INFO:              kmodes: Not installed
2023-04-09 22:59:38,501:INFO:             mlxtend: Not installed
2023-04-09 22:59:38,501:INFO:       statsforecast: Not installed
2023-04-09 22:59:38,501:INFO:        tune_sklearn: Not installed
2023-04-09 22:59:38,501:INFO:                 ray: Not installed
2023-04-09 22:59:38,501:INFO:            hyperopt: Not installed
2023-04-09 22:59:38,501:INFO:              optuna: Not installed
2023-04-09 22:59:38,501:INFO:               skopt: Not installed
2023-04-09 22:59:38,501:INFO:              mlflow: 2.2.1
2023-04-09 22:59:38,501:INFO:              gradio: Not installed
2023-04-09 22:59:38,501:INFO:             fastapi: Not installed
2023-04-09 22:59:38,501:INFO:             uvicorn: Not installed
2023-04-09 22:59:38,501:INFO:              m2cgen: Not installed
2023-04-09 22:59:38,501:INFO:           evidently: Not installed
2023-04-09 22:59:38,501:INFO:               fugue: Not installed
2023-04-09 22:59:38,501:INFO:           streamlit: Not installed
2023-04-09 22:59:38,501:INFO:             prophet: Not installed
2023-04-09 22:59:38,501:INFO:None
2023-04-09 22:59:38,501:INFO:Set up data.
2023-04-09 22:59:38,810:INFO:Set up train/test split.
2023-04-09 22:59:38,886:INFO:Set up index.
2023-04-09 22:59:38,890:INFO:Set up folding strategy.
2023-04-09 22:59:38,891:INFO:Assigning column types.
2023-04-09 22:59:38,899:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-09 22:59:38,944:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-09 22:59:38,945:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 22:59:38,973:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 22:59:38,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 22:59:39,024:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-09 22:59:39,024:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 22:59:39,052:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 22:59:39,054:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 22:59:39,055:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-09 22:59:39,102:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 22:59:39,128:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 22:59:39,131:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 22:59:39,175:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 22:59:39,203:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 22:59:39,205:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 22:59:39,205:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-09 22:59:39,275:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 22:59:39,277:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 22:59:39,347:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 22:59:39,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 22:59:39,362:INFO:Preparing preprocessing pipeline...
2023-04-09 22:59:39,368:INFO:Set up simple imputation.
2023-04-09 22:59:39,392:INFO:Set up encoding of ordinal features.
2023-04-09 22:59:39,399:INFO:Set up encoding of categorical features.
2023-04-09 23:03:13,718:INFO:PyCaret ClassificationExperiment
2023-04-09 23:03:13,719:INFO:Logging name: clf-default-name
2023-04-09 23:03:13,719:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-09 23:03:13,719:INFO:version 3.0.0.rc9
2023-04-09 23:03:13,719:INFO:Initializing setup()
2023-04-09 23:03:13,719:INFO:self.USI: 28db
2023-04-09 23:03:13,719:INFO:self._variable_keys: {'logging_param', 'exp_id', 'gpu_n_jobs_param', 'target_param', '_available_plots', 'is_multiclass', 'y_test', 'n_jobs_param', '_ml_usecase', 'X', 'y', 'pipeline', 'idx', 'memory', 'data', 'seed', 'X_train', 'fold_groups_param', 'y_train', 'USI', 'html_param', 'fold_shuffle_param', 'fold_generator', 'X_test', 'fix_imbalance', 'gpu_param', 'log_plots_param', 'exp_name_log'}
2023-04-09 23:03:13,719:INFO:Checking environment
2023-04-09 23:03:13,719:INFO:python_version: 3.9.13
2023-04-09 23:03:13,719:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-04-09 23:03:13,719:INFO:machine: AMD64
2023-04-09 23:03:13,719:INFO:platform: Windows-10-10.0.22621-SP0
2023-04-09 23:03:13,719:INFO:Memory: svmem(total=8415133696, available=1884061696, percent=77.6, used=6531072000, free=1884061696)
2023-04-09 23:03:13,720:INFO:Physical Core: 4
2023-04-09 23:03:13,720:INFO:Logical Core: 8
2023-04-09 23:03:13,720:INFO:Checking libraries
2023-04-09 23:03:13,720:INFO:System:
2023-04-09 23:03:13,720:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-04-09 23:03:13,720:INFO:executable: C:\Users\Kim\anaconda3\python.exe
2023-04-09 23:03:13,720:INFO:   machine: Windows-10-10.0.22621-SP0
2023-04-09 23:03:13,720:INFO:PyCaret required dependencies:
2023-04-09 23:03:13,720:INFO:                 pip: 22.3.1
2023-04-09 23:03:13,720:INFO:          setuptools: 64.0.2
2023-04-09 23:03:13,720:INFO:             pycaret: 3.0.0rc9
2023-04-09 23:03:13,720:INFO:             IPython: 8.9.0
2023-04-09 23:03:13,720:INFO:          ipywidgets: 7.6.5
2023-04-09 23:03:13,720:INFO:                tqdm: 4.64.1
2023-04-09 23:03:13,720:INFO:               numpy: 1.23.5
2023-04-09 23:03:13,720:INFO:              pandas: 1.5.3
2023-04-09 23:03:13,720:INFO:              jinja2: 3.1.2
2023-04-09 23:03:13,722:INFO:               scipy: 1.9.1
2023-04-09 23:03:13,722:INFO:              joblib: 1.2.0
2023-04-09 23:03:13,722:INFO:             sklearn: 1.2.1
2023-04-09 23:03:13,722:INFO:                pyod: 1.0.8
2023-04-09 23:03:13,722:INFO:            imblearn: 0.10.1
2023-04-09 23:03:13,722:INFO:   category_encoders: 2.6.0
2023-04-09 23:03:13,722:INFO:            lightgbm: 3.3.5
2023-04-09 23:03:13,722:INFO:               numba: 0.56.4
2023-04-09 23:03:13,722:INFO:            requests: 2.28.1
2023-04-09 23:03:13,722:INFO:          matplotlib: 3.7.0
2023-04-09 23:03:13,722:INFO:          scikitplot: 0.3.7
2023-04-09 23:03:13,722:INFO:         yellowbrick: 1.5
2023-04-09 23:03:13,722:INFO:              plotly: 5.13.0
2023-04-09 23:03:13,722:INFO:             kaleido: 0.2.1
2023-04-09 23:03:13,722:INFO:         statsmodels: 0.13.5
2023-04-09 23:03:13,722:INFO:              sktime: 0.16.1
2023-04-09 23:03:13,722:INFO:               tbats: 1.1.2
2023-04-09 23:03:13,722:INFO:            pmdarima: 2.0.2
2023-04-09 23:03:13,722:INFO:              psutil: 5.9.0
2023-04-09 23:03:13,722:INFO:PyCaret optional dependencies:
2023-04-09 23:03:13,723:INFO:                shap: 0.41.0
2023-04-09 23:03:13,723:INFO:           interpret: Not installed
2023-04-09 23:03:13,723:INFO:                umap: Not installed
2023-04-09 23:03:13,723:INFO:    pandas_profiling: 3.5.0
2023-04-09 23:03:13,723:INFO:  explainerdashboard: Not installed
2023-04-09 23:03:13,723:INFO:             autoviz: Not installed
2023-04-09 23:03:13,723:INFO:           fairlearn: Not installed
2023-04-09 23:03:13,723:INFO:             xgboost: 1.7.4
2023-04-09 23:03:13,723:INFO:            catboost: Not installed
2023-04-09 23:03:13,723:INFO:              kmodes: Not installed
2023-04-09 23:03:13,723:INFO:             mlxtend: Not installed
2023-04-09 23:03:13,723:INFO:       statsforecast: Not installed
2023-04-09 23:03:13,723:INFO:        tune_sklearn: Not installed
2023-04-09 23:03:13,723:INFO:                 ray: Not installed
2023-04-09 23:03:13,723:INFO:            hyperopt: Not installed
2023-04-09 23:03:13,723:INFO:              optuna: Not installed
2023-04-09 23:03:13,723:INFO:               skopt: Not installed
2023-04-09 23:03:13,723:INFO:              mlflow: 2.2.1
2023-04-09 23:03:13,723:INFO:              gradio: Not installed
2023-04-09 23:03:13,723:INFO:             fastapi: Not installed
2023-04-09 23:03:13,723:INFO:             uvicorn: Not installed
2023-04-09 23:03:13,724:INFO:              m2cgen: Not installed
2023-04-09 23:03:13,724:INFO:           evidently: Not installed
2023-04-09 23:03:13,724:INFO:               fugue: Not installed
2023-04-09 23:03:13,724:INFO:           streamlit: Not installed
2023-04-09 23:03:13,724:INFO:             prophet: Not installed
2023-04-09 23:03:13,724:INFO:None
2023-04-09 23:03:13,724:INFO:Set up data.
2023-04-09 23:03:13,972:INFO:Set up train/test split.
2023-04-09 23:03:14,028:INFO:Set up index.
2023-04-09 23:03:14,032:INFO:Set up folding strategy.
2023-04-09 23:03:14,032:INFO:Assigning column types.
2023-04-09 23:03:14,042:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-09 23:03:14,090:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-09 23:03:14,091:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 23:03:14,116:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:03:14,119:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:03:14,161:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-09 23:03:14,162:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 23:03:14,190:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:03:14,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:03:14,192:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-09 23:03:14,239:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 23:03:14,265:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:03:14,267:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:03:14,310:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 23:03:14,335:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:03:14,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:03:14,338:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-09 23:03:14,406:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:03:14,408:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:03:14,478:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:03:14,481:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:03:14,482:INFO:Preparing preprocessing pipeline...
2023-04-09 23:03:14,486:INFO:Set up simple imputation.
2023-04-09 23:03:14,508:INFO:Set up encoding of ordinal features.
2023-04-09 23:03:14,514:INFO:Set up encoding of categorical features.
2023-04-09 23:24:17,599:INFO:PyCaret ClassificationExperiment
2023-04-09 23:24:17,599:INFO:Logging name: clf-default-name
2023-04-09 23:24:17,599:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-09 23:24:17,599:INFO:version 3.0.0.rc9
2023-04-09 23:24:17,599:INFO:Initializing setup()
2023-04-09 23:24:17,599:INFO:self.USI: 8162
2023-04-09 23:24:17,599:INFO:self._variable_keys: {'logging_param', 'exp_id', 'gpu_n_jobs_param', 'target_param', '_available_plots', 'is_multiclass', 'y_test', 'n_jobs_param', '_ml_usecase', 'X', 'y', 'pipeline', 'idx', 'memory', 'data', 'seed', 'X_train', 'fold_groups_param', 'y_train', 'USI', 'html_param', 'fold_shuffle_param', 'fold_generator', 'X_test', 'fix_imbalance', 'gpu_param', 'log_plots_param', 'exp_name_log'}
2023-04-09 23:24:17,599:INFO:Checking environment
2023-04-09 23:24:17,599:INFO:python_version: 3.9.13
2023-04-09 23:24:17,600:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-04-09 23:24:17,600:INFO:machine: AMD64
2023-04-09 23:24:17,600:INFO:platform: Windows-10-10.0.22621-SP0
2023-04-09 23:24:17,600:INFO:Memory: svmem(total=8415133696, available=2190196736, percent=74.0, used=6224936960, free=2190196736)
2023-04-09 23:24:17,600:INFO:Physical Core: 4
2023-04-09 23:24:17,600:INFO:Logical Core: 8
2023-04-09 23:24:17,600:INFO:Checking libraries
2023-04-09 23:24:17,600:INFO:System:
2023-04-09 23:24:17,600:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-04-09 23:24:17,600:INFO:executable: C:\Users\Kim\anaconda3\python.exe
2023-04-09 23:24:17,600:INFO:   machine: Windows-10-10.0.22621-SP0
2023-04-09 23:24:17,600:INFO:PyCaret required dependencies:
2023-04-09 23:24:17,600:INFO:                 pip: 22.3.1
2023-04-09 23:24:17,600:INFO:          setuptools: 64.0.2
2023-04-09 23:24:17,600:INFO:             pycaret: 3.0.0rc9
2023-04-09 23:24:17,600:INFO:             IPython: 8.9.0
2023-04-09 23:24:17,600:INFO:          ipywidgets: 7.6.5
2023-04-09 23:24:17,601:INFO:                tqdm: 4.64.1
2023-04-09 23:24:17,601:INFO:               numpy: 1.23.5
2023-04-09 23:24:17,601:INFO:              pandas: 1.5.3
2023-04-09 23:24:17,601:INFO:              jinja2: 3.1.2
2023-04-09 23:24:17,601:INFO:               scipy: 1.9.1
2023-04-09 23:24:17,601:INFO:              joblib: 1.2.0
2023-04-09 23:24:17,601:INFO:             sklearn: 1.2.1
2023-04-09 23:24:17,601:INFO:                pyod: 1.0.8
2023-04-09 23:24:17,601:INFO:            imblearn: 0.10.1
2023-04-09 23:24:17,601:INFO:   category_encoders: 2.6.0
2023-04-09 23:24:17,601:INFO:            lightgbm: 3.3.5
2023-04-09 23:24:17,601:INFO:               numba: 0.56.4
2023-04-09 23:24:17,601:INFO:            requests: 2.28.1
2023-04-09 23:24:17,601:INFO:          matplotlib: 3.7.0
2023-04-09 23:24:17,601:INFO:          scikitplot: 0.3.7
2023-04-09 23:24:17,601:INFO:         yellowbrick: 1.5
2023-04-09 23:24:17,601:INFO:              plotly: 5.13.0
2023-04-09 23:24:17,601:INFO:             kaleido: 0.2.1
2023-04-09 23:24:17,601:INFO:         statsmodels: 0.13.5
2023-04-09 23:24:17,601:INFO:              sktime: 0.16.1
2023-04-09 23:24:17,601:INFO:               tbats: 1.1.2
2023-04-09 23:24:17,601:INFO:            pmdarima: 2.0.2
2023-04-09 23:24:17,602:INFO:              psutil: 5.9.0
2023-04-09 23:24:17,602:INFO:PyCaret optional dependencies:
2023-04-09 23:24:17,602:INFO:                shap: 0.41.0
2023-04-09 23:24:17,602:INFO:           interpret: Not installed
2023-04-09 23:24:17,602:INFO:                umap: Not installed
2023-04-09 23:24:17,602:INFO:    pandas_profiling: 3.5.0
2023-04-09 23:24:17,602:INFO:  explainerdashboard: Not installed
2023-04-09 23:24:17,602:INFO:             autoviz: Not installed
2023-04-09 23:24:17,602:INFO:           fairlearn: Not installed
2023-04-09 23:24:17,602:INFO:             xgboost: 1.7.4
2023-04-09 23:24:17,602:INFO:            catboost: Not installed
2023-04-09 23:24:17,602:INFO:              kmodes: Not installed
2023-04-09 23:24:17,602:INFO:             mlxtend: Not installed
2023-04-09 23:24:17,602:INFO:       statsforecast: Not installed
2023-04-09 23:24:17,602:INFO:        tune_sklearn: Not installed
2023-04-09 23:24:17,602:INFO:                 ray: Not installed
2023-04-09 23:24:17,602:INFO:            hyperopt: Not installed
2023-04-09 23:24:17,602:INFO:              optuna: Not installed
2023-04-09 23:24:17,602:INFO:               skopt: Not installed
2023-04-09 23:24:17,602:INFO:              mlflow: 2.2.1
2023-04-09 23:24:17,602:INFO:              gradio: Not installed
2023-04-09 23:24:17,603:INFO:             fastapi: Not installed
2023-04-09 23:24:17,603:INFO:             uvicorn: Not installed
2023-04-09 23:24:17,603:INFO:              m2cgen: Not installed
2023-04-09 23:24:17,603:INFO:           evidently: Not installed
2023-04-09 23:24:17,603:INFO:               fugue: Not installed
2023-04-09 23:24:17,603:INFO:           streamlit: Not installed
2023-04-09 23:24:17,603:INFO:             prophet: Not installed
2023-04-09 23:24:17,603:INFO:None
2023-04-09 23:24:17,603:INFO:Set up data.
2023-04-09 23:24:17,831:INFO:Set up train/test split.
2023-04-09 23:24:17,886:INFO:Set up index.
2023-04-09 23:24:17,891:INFO:Set up folding strategy.
2023-04-09 23:24:17,891:INFO:Assigning column types.
2023-04-09 23:24:17,900:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-09 23:24:17,943:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-09 23:24:17,943:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 23:24:17,969:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:24:17,971:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:24:18,014:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-09 23:24:18,014:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 23:24:18,039:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:24:18,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:24:18,042:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-09 23:24:18,084:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 23:24:18,109:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:24:18,111:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:24:18,154:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 23:24:18,179:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:24:18,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:24:18,182:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-09 23:24:18,249:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:24:18,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:24:18,318:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:24:18,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:24:18,322:INFO:Preparing preprocessing pipeline...
2023-04-09 23:24:18,325:INFO:Set up simple imputation.
2023-04-09 23:24:18,348:INFO:Set up encoding of ordinal features.
2023-04-09 23:24:18,354:INFO:Set up encoding of categorical features.
2023-04-09 23:24:37,347:INFO:PyCaret ClassificationExperiment
2023-04-09 23:24:37,347:INFO:Logging name: clf-default-name
2023-04-09 23:24:37,347:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-09 23:24:37,347:INFO:version 3.0.0.rc9
2023-04-09 23:24:37,347:INFO:Initializing setup()
2023-04-09 23:24:37,347:INFO:self.USI: 055b
2023-04-09 23:24:37,347:INFO:self._variable_keys: {'logging_param', 'exp_id', 'gpu_n_jobs_param', 'target_param', '_available_plots', 'is_multiclass', 'y_test', 'n_jobs_param', '_ml_usecase', 'X', 'y', 'pipeline', 'idx', 'memory', 'data', 'seed', 'X_train', 'fold_groups_param', 'y_train', 'USI', 'html_param', 'fold_shuffle_param', 'fold_generator', 'X_test', 'fix_imbalance', 'gpu_param', 'log_plots_param', 'exp_name_log'}
2023-04-09 23:24:37,347:INFO:Checking environment
2023-04-09 23:24:37,347:INFO:python_version: 3.9.13
2023-04-09 23:24:37,347:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-04-09 23:24:37,348:INFO:machine: AMD64
2023-04-09 23:24:37,348:INFO:platform: Windows-10-10.0.22621-SP0
2023-04-09 23:24:37,348:INFO:Memory: svmem(total=8415133696, available=2168782848, percent=74.2, used=6246350848, free=2168782848)
2023-04-09 23:24:37,348:INFO:Physical Core: 4
2023-04-09 23:24:37,348:INFO:Logical Core: 8
2023-04-09 23:24:37,348:INFO:Checking libraries
2023-04-09 23:24:37,348:INFO:System:
2023-04-09 23:24:37,348:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-04-09 23:24:37,348:INFO:executable: C:\Users\Kim\anaconda3\python.exe
2023-04-09 23:24:37,348:INFO:   machine: Windows-10-10.0.22621-SP0
2023-04-09 23:24:37,348:INFO:PyCaret required dependencies:
2023-04-09 23:24:37,348:INFO:                 pip: 22.3.1
2023-04-09 23:24:37,348:INFO:          setuptools: 64.0.2
2023-04-09 23:24:37,348:INFO:             pycaret: 3.0.0rc9
2023-04-09 23:24:37,348:INFO:             IPython: 8.9.0
2023-04-09 23:24:37,348:INFO:          ipywidgets: 7.6.5
2023-04-09 23:24:37,348:INFO:                tqdm: 4.64.1
2023-04-09 23:24:37,348:INFO:               numpy: 1.23.5
2023-04-09 23:24:37,348:INFO:              pandas: 1.5.3
2023-04-09 23:24:37,348:INFO:              jinja2: 3.1.2
2023-04-09 23:24:37,348:INFO:               scipy: 1.9.1
2023-04-09 23:24:37,350:INFO:              joblib: 1.2.0
2023-04-09 23:24:37,350:INFO:             sklearn: 1.2.1
2023-04-09 23:24:37,350:INFO:                pyod: 1.0.8
2023-04-09 23:24:37,350:INFO:            imblearn: 0.10.1
2023-04-09 23:24:37,350:INFO:   category_encoders: 2.6.0
2023-04-09 23:24:37,350:INFO:            lightgbm: 3.3.5
2023-04-09 23:24:37,350:INFO:               numba: 0.56.4
2023-04-09 23:24:37,350:INFO:            requests: 2.28.1
2023-04-09 23:24:37,350:INFO:          matplotlib: 3.7.0
2023-04-09 23:24:37,350:INFO:          scikitplot: 0.3.7
2023-04-09 23:24:37,350:INFO:         yellowbrick: 1.5
2023-04-09 23:24:37,350:INFO:              plotly: 5.13.0
2023-04-09 23:24:37,350:INFO:             kaleido: 0.2.1
2023-04-09 23:24:37,350:INFO:         statsmodels: 0.13.5
2023-04-09 23:24:37,350:INFO:              sktime: 0.16.1
2023-04-09 23:24:37,350:INFO:               tbats: 1.1.2
2023-04-09 23:24:37,350:INFO:            pmdarima: 2.0.2
2023-04-09 23:24:37,350:INFO:              psutil: 5.9.0
2023-04-09 23:24:37,350:INFO:PyCaret optional dependencies:
2023-04-09 23:24:37,350:INFO:                shap: 0.41.0
2023-04-09 23:24:37,350:INFO:           interpret: Not installed
2023-04-09 23:24:37,350:INFO:                umap: Not installed
2023-04-09 23:24:37,350:INFO:    pandas_profiling: 3.5.0
2023-04-09 23:24:37,351:INFO:  explainerdashboard: Not installed
2023-04-09 23:24:37,351:INFO:             autoviz: Not installed
2023-04-09 23:24:37,351:INFO:           fairlearn: Not installed
2023-04-09 23:24:37,351:INFO:             xgboost: 1.7.4
2023-04-09 23:24:37,351:INFO:            catboost: Not installed
2023-04-09 23:24:37,351:INFO:              kmodes: Not installed
2023-04-09 23:24:37,351:INFO:             mlxtend: Not installed
2023-04-09 23:24:37,351:INFO:       statsforecast: Not installed
2023-04-09 23:24:37,351:INFO:        tune_sklearn: Not installed
2023-04-09 23:24:37,351:INFO:                 ray: Not installed
2023-04-09 23:24:37,351:INFO:            hyperopt: Not installed
2023-04-09 23:24:37,351:INFO:              optuna: Not installed
2023-04-09 23:24:37,351:INFO:               skopt: Not installed
2023-04-09 23:24:37,351:INFO:              mlflow: 2.2.1
2023-04-09 23:24:37,351:INFO:              gradio: Not installed
2023-04-09 23:24:37,351:INFO:             fastapi: Not installed
2023-04-09 23:24:37,351:INFO:             uvicorn: Not installed
2023-04-09 23:24:37,351:INFO:              m2cgen: Not installed
2023-04-09 23:24:37,351:INFO:           evidently: Not installed
2023-04-09 23:24:37,351:INFO:               fugue: Not installed
2023-04-09 23:24:37,351:INFO:           streamlit: Not installed
2023-04-09 23:24:37,351:INFO:             prophet: Not installed
2023-04-09 23:24:37,352:INFO:None
2023-04-09 23:24:37,352:INFO:Set up data.
2023-04-09 23:24:37,573:INFO:Set up train/test split.
2023-04-09 23:24:37,626:INFO:Set up index.
2023-04-09 23:24:37,630:INFO:Set up folding strategy.
2023-04-09 23:24:37,630:INFO:Assigning column types.
2023-04-09 23:24:37,638:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-09 23:24:37,680:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-09 23:24:37,681:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 23:24:37,707:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:24:37,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:24:37,751:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-09 23:24:37,752:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 23:24:37,778:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:24:37,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:24:37,780:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-09 23:24:37,823:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 23:24:37,849:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:24:37,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:24:37,894:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-09 23:24:37,919:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:24:37,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:24:37,922:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-09 23:24:37,989:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:24:37,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:24:38,060:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-09 23:24:38,069:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-04-09 23:24:38,070:INFO:Preparing preprocessing pipeline...
2023-04-09 23:24:38,073:INFO:Set up simple imputation.
2023-04-09 23:24:38,096:INFO:Set up encoding of ordinal features.
2023-04-09 23:24:38,102:INFO:Set up encoding of categorical features.
2023-04-13 20:48:50,534:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-13 20:48:50,536:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-13 20:48:50,536:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-13 20:48:50,536:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-04-13 20:48:51,777:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-04-13 20:49:28,710:INFO:PyCaret ClassificationExperiment
2023-04-13 20:49:28,710:INFO:Logging name: clf-default-name
2023-04-13 20:49:28,711:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-04-13 20:49:28,711:INFO:version 3.0.0.rc9
2023-04-13 20:49:28,711:INFO:Initializing setup()
2023-04-13 20:49:28,711:INFO:self.USI: ab6c
2023-04-13 20:49:28,711:INFO:self._variable_keys: {'y_train', 'data', 'fold_generator', 'pipeline', '_available_plots', 'html_param', 'logging_param', 'idx', 'y_test', 'X', 'log_plots_param', 'exp_id', 'is_multiclass', 'y', 'gpu_param', 'seed', '_ml_usecase', 'gpu_n_jobs_param', 'X_test', 'target_param', 'fix_imbalance', 'X_train', 'n_jobs_param', 'fold_groups_param', 'fold_shuffle_param', 'exp_name_log', 'USI', 'memory'}
2023-04-13 20:49:28,711:INFO:Checking environment
2023-04-13 20:49:28,711:INFO:python_version: 3.9.13
2023-04-13 20:49:28,712:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-04-13 20:49:28,712:INFO:machine: AMD64
2023-04-13 20:49:28,712:INFO:platform: Windows-10-10.0.22621-SP0
2023-04-13 20:49:28,712:INFO:Memory: svmem(total=8415133696, available=2461315072, percent=70.8, used=5953818624, free=2461315072)
2023-04-13 20:49:28,713:INFO:Physical Core: 4
2023-04-13 20:49:28,713:INFO:Logical Core: 8
2023-04-13 20:49:28,713:INFO:Checking libraries
2023-04-13 20:49:28,713:INFO:System:
2023-04-13 20:49:28,713:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-04-13 20:49:28,713:INFO:executable: C:\Users\Kim\anaconda3\python.exe
2023-04-13 20:49:28,713:INFO:   machine: Windows-10-10.0.22621-SP0
2023-04-13 20:49:28,713:INFO:PyCaret required dependencies:
2023-04-13 20:49:28,714:INFO:                 pip: 22.3.1
2023-04-13 20:49:28,714:INFO:          setuptools: 64.0.2
2023-04-13 20:49:28,714:INFO:             pycaret: 3.0.0rc9
2023-04-13 20:49:28,714:INFO:             IPython: 8.9.0
2023-04-13 20:49:28,714:INFO:          ipywidgets: 7.6.5
2023-04-13 20:49:28,714:INFO:                tqdm: 4.64.1
2023-04-13 20:49:28,714:INFO:               numpy: 1.23.5
2023-04-13 20:49:28,714:INFO:              pandas: 1.5.3
2023-04-13 20:49:28,714:INFO:              jinja2: 3.1.2
2023-04-13 20:49:28,714:INFO:               scipy: 1.9.1
2023-04-13 20:49:28,714:INFO:              joblib: 1.2.0
2023-04-13 20:49:28,714:INFO:             sklearn: 1.2.1
2023-04-13 20:49:28,714:INFO:                pyod: 1.0.8
2023-04-13 20:49:28,714:INFO:            imblearn: 0.10.1
2023-04-13 20:49:28,714:INFO:   category_encoders: 2.6.0
2023-04-13 20:49:28,714:INFO:            lightgbm: 3.3.5
2023-04-13 20:49:28,714:INFO:               numba: 0.56.4
2023-04-13 20:49:28,714:INFO:            requests: 2.28.1
2023-04-13 20:49:28,714:INFO:          matplotlib: 3.7.0
2023-04-13 20:49:28,714:INFO:          scikitplot: 0.3.7
2023-04-13 20:49:28,714:INFO:         yellowbrick: 1.5
2023-04-13 20:49:28,714:INFO:              plotly: 5.13.0
2023-04-13 20:49:28,715:INFO:             kaleido: 0.2.1
2023-04-13 20:49:28,715:INFO:         statsmodels: 0.13.5
2023-04-13 20:49:28,715:INFO:              sktime: 0.16.1
2023-04-13 20:49:28,715:INFO:               tbats: 1.1.2
2023-04-13 20:49:28,715:INFO:            pmdarima: 2.0.2
2023-04-13 20:49:28,715:INFO:              psutil: 5.9.0
2023-04-13 20:49:28,715:INFO:PyCaret optional dependencies:
2023-04-13 20:49:28,725:INFO:                shap: 0.41.0
2023-04-13 20:49:28,726:INFO:           interpret: Not installed
2023-04-13 20:49:28,726:INFO:                umap: Not installed
2023-04-13 20:49:28,726:INFO:    pandas_profiling: 3.5.0
2023-04-13 20:49:28,726:INFO:  explainerdashboard: Not installed
2023-04-13 20:49:28,726:INFO:             autoviz: Not installed
2023-04-13 20:49:28,726:INFO:           fairlearn: Not installed
2023-04-13 20:49:28,726:INFO:             xgboost: 1.7.4
2023-04-13 20:49:28,726:INFO:            catboost: 1.1.1
2023-04-13 20:49:28,726:INFO:              kmodes: Not installed
2023-04-13 20:49:28,726:INFO:             mlxtend: Not installed
2023-04-13 20:49:28,726:INFO:       statsforecast: Not installed
2023-04-13 20:49:28,726:INFO:        tune_sklearn: Not installed
2023-04-13 20:49:28,726:INFO:                 ray: Not installed
2023-04-13 20:49:28,726:INFO:            hyperopt: Not installed
2023-04-13 20:49:28,726:INFO:              optuna: Not installed
2023-04-13 20:49:28,726:INFO:               skopt: Not installed
2023-04-13 20:49:28,726:INFO:              mlflow: 2.2.1
2023-04-13 20:49:28,726:INFO:              gradio: Not installed
2023-04-13 20:49:28,726:INFO:             fastapi: Not installed
2023-04-13 20:49:28,726:INFO:             uvicorn: Not installed
2023-04-13 20:49:28,726:INFO:              m2cgen: Not installed
2023-04-13 20:49:28,726:INFO:           evidently: Not installed
2023-04-13 20:49:28,727:INFO:               fugue: Not installed
2023-04-13 20:49:28,727:INFO:           streamlit: Not installed
2023-04-13 20:49:28,727:INFO:             prophet: Not installed
2023-04-13 20:49:28,727:INFO:None
2023-04-13 20:49:28,727:INFO:Set up data.
2023-04-13 20:49:28,937:INFO:Set up train/test split.
2023-04-13 20:49:29,136:INFO:Set up index.
2023-04-13 20:49:29,149:INFO:Set up folding strategy.
2023-04-13 20:49:29,149:INFO:Assigning column types.
2023-04-13 20:49:29,260:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-04-13 20:49:29,314:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-13 20:49:29,319:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-13 20:49:29,365:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-13 20:49:29,515:INFO:Soft dependency imported: catboost: 1.1.1
2023-04-13 20:49:29,673:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-04-13 20:49:29,674:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-13 20:49:29,703:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-13 20:49:29,705:INFO:Soft dependency imported: catboost: 1.1.1
2023-04-13 20:49:29,706:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-04-13 20:49:29,752:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-13 20:49:29,784:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-13 20:49:29,787:INFO:Soft dependency imported: catboost: 1.1.1
2023-04-13 20:49:29,836:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-04-13 20:49:29,865:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-13 20:49:29,868:INFO:Soft dependency imported: catboost: 1.1.1
2023-04-13 20:49:29,868:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-04-13 20:49:29,943:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-13 20:49:29,945:INFO:Soft dependency imported: catboost: 1.1.1
2023-04-13 20:49:30,018:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-13 20:49:30,021:INFO:Soft dependency imported: catboost: 1.1.1
2023-04-13 20:49:30,036:INFO:Preparing preprocessing pipeline...
2023-04-13 20:49:30,053:INFO:Set up column name cleaning.
2023-04-13 20:49:30,075:INFO:Set up simple imputation.
2023-04-13 20:49:31,112:INFO:Finished creating preprocessing pipeline.
2023-04-13 20:49:31,121:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Kim\AppData\Local\Temp\joblib),
         steps=[('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['amount_tsh', 'gps_height',
                                             'longitude', 'latitude',
                                             'population', 'constructi...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-04-13 20:49:31,121:INFO:Creating final display dataframe.
2023-04-13 20:49:33,220:INFO:Setup _display_container:                     Description               Value
0                    Session id                   1
1                        Target  year_recorded_2013
2                   Target type              Binary
3           Original data shape        (59400, 342)
4        Transformed data shape        (59400, 342)
5   Transformed train set shape        (41580, 342)
6    Transformed test set shape        (17820, 342)
7              Numeric features                 339
8                    Preprocess                True
9               Imputation type              simple
10           Numeric imputation                mean
11       Categorical imputation                mode
12               Fold Generator     StratifiedKFold
13                  Fold Number                  10
14                     CPU Jobs                  -1
15                      Use GPU               False
16               Log Experiment               False
17              Experiment Name    clf-default-name
18                          USI                ab6c
2023-04-13 20:49:33,315:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-13 20:49:33,317:INFO:Soft dependency imported: catboost: 1.1.1
2023-04-13 20:49:33,391:INFO:Soft dependency imported: xgboost: 1.7.4
2023-04-13 20:49:33,394:INFO:Soft dependency imported: catboost: 1.1.1
2023-04-13 20:49:33,395:INFO:setup() successfully completed in 4.69s...............
2023-04-13 20:50:01,299:INFO:Initializing compare_models()
2023-04-13 20:50:01,299:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-04-13 20:50:01,301:INFO:Checking exceptions
2023-04-13 20:50:01,428:INFO:Preparing display monitor
2023-04-13 20:50:01,504:INFO:Initializing Logistic Regression
2023-04-13 20:50:01,504:INFO:Total runtime is 0.0 minutes
2023-04-13 20:50:01,507:INFO:SubProcess create_model() called ==================================
2023-04-13 20:50:01,508:INFO:Initializing create_model()
2023-04-13 20:50:01,508:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 20:50:01,508:INFO:Checking exceptions
2023-04-13 20:50:01,509:INFO:Importing libraries
2023-04-13 20:50:01,509:INFO:Copying training dataset
2023-04-13 20:50:01,753:INFO:Defining folds
2023-04-13 20:50:01,753:INFO:Declaring metric variables
2023-04-13 20:50:01,757:INFO:Importing untrained model
2023-04-13 20:50:01,759:INFO:Logistic Regression Imported successfully
2023-04-13 20:50:01,767:INFO:Starting cross validation
2023-04-13 20:50:01,769:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 20:50:14,811:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:230: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-04-13 20:50:14,873:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:230: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-04-13 20:51:59,774:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-13 20:52:00,476:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:52:01,754:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-04-13 20:52:01,983:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-13 20:52:02,692:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:52:03,470:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-13 20:52:03,663:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:108: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = pipeline._memory_transform(transformer, X, y)

2023-04-13 20:52:04,113:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:52:04,643:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-13 20:52:05,539:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-13 20:52:05,728:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-13 20:52:06,074:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:52:07,276:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-13 20:52:10,331:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-13 20:52:36,201:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-13 20:52:37,711:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-04-13 20:52:38,202:INFO:Calculating mean and std
2023-04-13 20:52:38,205:INFO:Creating metrics dataframe
2023-04-13 20:52:38,213:INFO:Uploading results into container
2023-04-13 20:52:38,214:INFO:Uploading model into container now
2023-04-13 20:52:38,216:INFO:_master_model_container: 1
2023-04-13 20:52:38,216:INFO:_display_container: 2
2023-04-13 20:52:38,217:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-04-13 20:52:38,217:INFO:create_model() successfully completed......................................
2023-04-13 20:52:39,069:INFO:SubProcess create_model() end ==================================
2023-04-13 20:52:39,069:INFO:Creating metrics dataframe
2023-04-13 20:52:39,092:INFO:Initializing K Neighbors Classifier
2023-04-13 20:52:39,092:INFO:Total runtime is 2.6264719565709433 minutes
2023-04-13 20:52:39,097:INFO:SubProcess create_model() called ==================================
2023-04-13 20:52:39,097:INFO:Initializing create_model()
2023-04-13 20:52:39,097:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 20:52:39,097:INFO:Checking exceptions
2023-04-13 20:52:39,097:INFO:Importing libraries
2023-04-13 20:52:39,097:INFO:Copying training dataset
2023-04-13 20:52:39,367:INFO:Defining folds
2023-04-13 20:52:39,367:INFO:Declaring metric variables
2023-04-13 20:52:39,382:INFO:Importing untrained model
2023-04-13 20:52:39,386:INFO:K Neighbors Classifier Imported successfully
2023-04-13 20:52:39,397:INFO:Starting cross validation
2023-04-13 20:52:39,400:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 20:52:41,074:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:230: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-04-13 20:53:09,918:INFO:Calculating mean and std
2023-04-13 20:53:09,923:INFO:Creating metrics dataframe
2023-04-13 20:53:09,940:INFO:Uploading results into container
2023-04-13 20:53:09,941:INFO:Uploading model into container now
2023-04-13 20:53:09,942:INFO:_master_model_container: 2
2023-04-13 20:53:09,942:INFO:_display_container: 2
2023-04-13 20:53:09,943:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-04-13 20:53:09,943:INFO:create_model() successfully completed......................................
2023-04-13 20:53:10,284:INFO:SubProcess create_model() end ==================================
2023-04-13 20:53:10,284:INFO:Creating metrics dataframe
2023-04-13 20:53:10,298:INFO:Initializing Naive Bayes
2023-04-13 20:53:10,298:INFO:Total runtime is 3.1465712904930117 minutes
2023-04-13 20:53:10,302:INFO:SubProcess create_model() called ==================================
2023-04-13 20:53:10,302:INFO:Initializing create_model()
2023-04-13 20:53:10,302:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 20:53:10,302:INFO:Checking exceptions
2023-04-13 20:53:10,302:INFO:Importing libraries
2023-04-13 20:53:10,303:INFO:Copying training dataset
2023-04-13 20:53:10,545:INFO:Defining folds
2023-04-13 20:53:10,546:INFO:Declaring metric variables
2023-04-13 20:53:10,550:INFO:Importing untrained model
2023-04-13 20:53:10,554:INFO:Naive Bayes Imported successfully
2023-04-13 20:53:10,561:INFO:Starting cross validation
2023-04-13 20:53:10,563:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 20:53:16,201:INFO:Calculating mean and std
2023-04-13 20:53:16,203:INFO:Creating metrics dataframe
2023-04-13 20:53:16,208:INFO:Uploading results into container
2023-04-13 20:53:16,209:INFO:Uploading model into container now
2023-04-13 20:53:16,209:INFO:_master_model_container: 3
2023-04-13 20:53:16,210:INFO:_display_container: 2
2023-04-13 20:53:16,210:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-04-13 20:53:16,210:INFO:create_model() successfully completed......................................
2023-04-13 20:53:16,610:INFO:SubProcess create_model() end ==================================
2023-04-13 20:53:16,610:INFO:Creating metrics dataframe
2023-04-13 20:53:16,627:INFO:Initializing Decision Tree Classifier
2023-04-13 20:53:16,627:INFO:Total runtime is 3.252060393492381 minutes
2023-04-13 20:53:16,631:INFO:SubProcess create_model() called ==================================
2023-04-13 20:53:16,632:INFO:Initializing create_model()
2023-04-13 20:53:16,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 20:53:16,633:INFO:Checking exceptions
2023-04-13 20:53:16,633:INFO:Importing libraries
2023-04-13 20:53:16,633:INFO:Copying training dataset
2023-04-13 20:53:16,887:INFO:Defining folds
2023-04-13 20:53:16,887:INFO:Declaring metric variables
2023-04-13 20:53:16,891:INFO:Importing untrained model
2023-04-13 20:53:16,895:INFO:Decision Tree Classifier Imported successfully
2023-04-13 20:53:16,902:INFO:Starting cross validation
2023-04-13 20:53:16,904:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 20:53:20,904:INFO:Calculating mean and std
2023-04-13 20:53:20,906:INFO:Creating metrics dataframe
2023-04-13 20:53:20,910:INFO:Uploading results into container
2023-04-13 20:53:20,911:INFO:Uploading model into container now
2023-04-13 20:53:20,911:INFO:_master_model_container: 4
2023-04-13 20:53:20,912:INFO:_display_container: 2
2023-04-13 20:53:20,912:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1, splitter='best')
2023-04-13 20:53:20,912:INFO:create_model() successfully completed......................................
2023-04-13 20:53:21,271:INFO:SubProcess create_model() end ==================================
2023-04-13 20:53:21,272:INFO:Creating metrics dataframe
2023-04-13 20:53:21,288:INFO:Initializing SVM - Linear Kernel
2023-04-13 20:53:21,288:INFO:Total runtime is 3.329744537671407 minutes
2023-04-13 20:53:21,293:INFO:SubProcess create_model() called ==================================
2023-04-13 20:53:21,293:INFO:Initializing create_model()
2023-04-13 20:53:21,293:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 20:53:21,293:INFO:Checking exceptions
2023-04-13 20:53:21,293:INFO:Importing libraries
2023-04-13 20:53:21,293:INFO:Copying training dataset
2023-04-13 20:53:21,537:INFO:Defining folds
2023-04-13 20:53:21,539:INFO:Declaring metric variables
2023-04-13 20:53:21,542:INFO:Importing untrained model
2023-04-13 20:53:21,546:INFO:SVM - Linear Kernel Imported successfully
2023-04-13 20:53:21,555:INFO:Starting cross validation
2023-04-13 20:53:21,558:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 20:53:26,963:INFO:Calculating mean and std
2023-04-13 20:53:26,965:INFO:Creating metrics dataframe
2023-04-13 20:53:26,969:INFO:Uploading results into container
2023-04-13 20:53:26,969:INFO:Uploading model into container now
2023-04-13 20:53:26,970:INFO:_master_model_container: 5
2023-04-13 20:53:26,970:INFO:_display_container: 2
2023-04-13 20:53:26,970:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-04-13 20:53:26,971:INFO:create_model() successfully completed......................................
2023-04-13 20:53:27,294:INFO:SubProcess create_model() end ==================================
2023-04-13 20:53:27,294:INFO:Creating metrics dataframe
2023-04-13 20:53:27,310:INFO:Initializing Ridge Classifier
2023-04-13 20:53:27,310:INFO:Total runtime is 3.4300976792971296 minutes
2023-04-13 20:53:27,314:INFO:SubProcess create_model() called ==================================
2023-04-13 20:53:27,314:INFO:Initializing create_model()
2023-04-13 20:53:27,314:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 20:53:27,314:INFO:Checking exceptions
2023-04-13 20:53:27,314:INFO:Importing libraries
2023-04-13 20:53:27,316:INFO:Copying training dataset
2023-04-13 20:53:27,555:INFO:Defining folds
2023-04-13 20:53:27,555:INFO:Declaring metric variables
2023-04-13 20:53:27,560:INFO:Importing untrained model
2023-04-13 20:53:27,565:INFO:Ridge Classifier Imported successfully
2023-04-13 20:53:27,572:INFO:Starting cross validation
2023-04-13 20:53:27,575:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 20:53:33,737:INFO:Calculating mean and std
2023-04-13 20:53:33,738:INFO:Creating metrics dataframe
2023-04-13 20:53:33,742:INFO:Uploading results into container
2023-04-13 20:53:33,743:INFO:Uploading model into container now
2023-04-13 20:53:33,743:INFO:_master_model_container: 6
2023-04-13 20:53:33,743:INFO:_display_container: 2
2023-04-13 20:53:33,744:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1, solver='auto',
                tol=0.0001)
2023-04-13 20:53:33,744:INFO:create_model() successfully completed......................................
2023-04-13 20:53:34,104:INFO:SubProcess create_model() end ==================================
2023-04-13 20:53:34,104:INFO:Creating metrics dataframe
2023-04-13 20:53:34,124:INFO:Initializing Random Forest Classifier
2023-04-13 20:53:34,124:INFO:Total runtime is 3.5436711510022483 minutes
2023-04-13 20:53:34,127:INFO:SubProcess create_model() called ==================================
2023-04-13 20:53:34,128:INFO:Initializing create_model()
2023-04-13 20:53:34,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 20:53:34,128:INFO:Checking exceptions
2023-04-13 20:53:34,128:INFO:Importing libraries
2023-04-13 20:53:34,129:INFO:Copying training dataset
2023-04-13 20:53:34,389:INFO:Defining folds
2023-04-13 20:53:34,389:INFO:Declaring metric variables
2023-04-13 20:53:34,391:INFO:Importing untrained model
2023-04-13 20:53:34,396:INFO:Random Forest Classifier Imported successfully
2023-04-13 20:53:34,403:INFO:Starting cross validation
2023-04-13 20:53:34,405:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 20:53:46,129:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 2.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:53:46,457:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 2.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:53:48,014:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:53:48,046:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:53:49,595:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:306: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 20:53:54,415:INFO:Calculating mean and std
2023-04-13 20:53:54,417:INFO:Creating metrics dataframe
2023-04-13 20:53:54,422:INFO:Uploading results into container
2023-04-13 20:53:54,424:INFO:Uploading model into container now
2023-04-13 20:53:54,424:INFO:_master_model_container: 7
2023-04-13 20:53:54,424:INFO:_display_container: 2
2023-04-13 20:53:54,425:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1, verbose=0, warm_start=False)
2023-04-13 20:53:54,425:INFO:create_model() successfully completed......................................
2023-04-13 20:53:54,825:INFO:SubProcess create_model() end ==================================
2023-04-13 20:53:54,825:INFO:Creating metrics dataframe
2023-04-13 20:53:54,839:INFO:Initializing Quadratic Discriminant Analysis
2023-04-13 20:53:54,841:INFO:Total runtime is 3.888946763674418 minutes
2023-04-13 20:53:54,843:INFO:SubProcess create_model() called ==================================
2023-04-13 20:53:54,845:INFO:Initializing create_model()
2023-04-13 20:53:54,845:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 20:53:54,845:INFO:Checking exceptions
2023-04-13 20:53:54,846:INFO:Importing libraries
2023-04-13 20:53:54,846:INFO:Copying training dataset
2023-04-13 20:53:55,110:INFO:Defining folds
2023-04-13 20:53:55,110:INFO:Declaring metric variables
2023-04-13 20:53:55,114:INFO:Importing untrained model
2023-04-13 20:53:55,118:INFO:Quadratic Discriminant Analysis Imported successfully
2023-04-13 20:53:55,127:INFO:Starting cross validation
2023-04-13 20:53:55,129:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 20:54:04,372:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-13 20:54:04,424:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-13 20:54:04,443:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-13 20:54:04,631:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-13 20:54:04,644:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-13 20:54:04,861:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-13 20:54:04,762:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-13 20:54:04,992:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-13 20:54:13,336:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-13 20:54:13,373:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-04-13 20:54:15,677:INFO:Calculating mean and std
2023-04-13 20:54:15,681:INFO:Creating metrics dataframe
2023-04-13 20:54:15,687:INFO:Uploading results into container
2023-04-13 20:54:15,689:INFO:Uploading model into container now
2023-04-13 20:54:15,690:INFO:_master_model_container: 8
2023-04-13 20:54:15,690:INFO:_display_container: 2
2023-04-13 20:54:15,690:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-04-13 20:54:15,691:INFO:create_model() successfully completed......................................
2023-04-13 20:54:16,177:INFO:SubProcess create_model() end ==================================
2023-04-13 20:54:16,177:INFO:Creating metrics dataframe
2023-04-13 20:54:16,195:INFO:Initializing Ada Boost Classifier
2023-04-13 20:54:16,195:INFO:Total runtime is 4.244858260949453 minutes
2023-04-13 20:54:16,200:INFO:SubProcess create_model() called ==================================
2023-04-13 20:54:16,200:INFO:Initializing create_model()
2023-04-13 20:54:16,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 20:54:16,200:INFO:Checking exceptions
2023-04-13 20:54:16,200:INFO:Importing libraries
2023-04-13 20:54:16,200:INFO:Copying training dataset
2023-04-13 20:54:16,461:INFO:Defining folds
2023-04-13 20:54:16,462:INFO:Declaring metric variables
2023-04-13 20:54:16,466:INFO:Importing untrained model
2023-04-13 20:54:16,470:INFO:Ada Boost Classifier Imported successfully
2023-04-13 20:54:16,477:INFO:Starting cross validation
2023-04-13 20:54:16,480:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 20:54:53,806:INFO:Calculating mean and std
2023-04-13 20:54:53,812:INFO:Creating metrics dataframe
2023-04-13 20:54:53,822:INFO:Uploading results into container
2023-04-13 20:54:53,824:INFO:Uploading model into container now
2023-04-13 20:54:53,825:INFO:_master_model_container: 9
2023-04-13 20:54:53,825:INFO:_display_container: 2
2023-04-13 20:54:53,825:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1)
2023-04-13 20:54:53,825:INFO:create_model() successfully completed......................................
2023-04-13 20:54:54,182:INFO:SubProcess create_model() end ==================================
2023-04-13 20:54:54,182:INFO:Creating metrics dataframe
2023-04-13 20:54:54,202:INFO:Initializing Gradient Boosting Classifier
2023-04-13 20:54:54,202:INFO:Total runtime is 4.8783098022143045 minutes
2023-04-13 20:54:54,207:INFO:SubProcess create_model() called ==================================
2023-04-13 20:54:54,208:INFO:Initializing create_model()
2023-04-13 20:54:54,208:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 20:54:54,208:INFO:Checking exceptions
2023-04-13 20:54:54,208:INFO:Importing libraries
2023-04-13 20:54:54,208:INFO:Copying training dataset
2023-04-13 20:54:54,461:INFO:Defining folds
2023-04-13 20:54:54,461:INFO:Declaring metric variables
2023-04-13 20:54:54,477:INFO:Importing untrained model
2023-04-13 20:54:54,481:INFO:Gradient Boosting Classifier Imported successfully
2023-04-13 20:54:54,488:INFO:Starting cross validation
2023-04-13 20:54:54,491:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 20:55:44,778:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:56:11,636:INFO:Calculating mean and std
2023-04-13 20:56:11,638:INFO:Creating metrics dataframe
2023-04-13 20:56:11,641:INFO:Uploading results into container
2023-04-13 20:56:11,642:INFO:Uploading model into container now
2023-04-13 20:56:11,642:INFO:_master_model_container: 10
2023-04-13 20:56:11,643:INFO:_display_container: 2
2023-04-13 20:56:11,643:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-04-13 20:56:11,644:INFO:create_model() successfully completed......................................
2023-04-13 20:56:12,021:INFO:SubProcess create_model() end ==================================
2023-04-13 20:56:12,021:INFO:Creating metrics dataframe
2023-04-13 20:56:12,050:INFO:Initializing Linear Discriminant Analysis
2023-04-13 20:56:12,051:INFO:Total runtime is 6.17578295469284 minutes
2023-04-13 20:56:12,055:INFO:SubProcess create_model() called ==================================
2023-04-13 20:56:12,055:INFO:Initializing create_model()
2023-04-13 20:56:12,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 20:56:12,055:INFO:Checking exceptions
2023-04-13 20:56:12,055:INFO:Importing libraries
2023-04-13 20:56:12,055:INFO:Copying training dataset
2023-04-13 20:56:12,298:INFO:Defining folds
2023-04-13 20:56:12,298:INFO:Declaring metric variables
2023-04-13 20:56:12,302:INFO:Importing untrained model
2023-04-13 20:56:12,307:INFO:Linear Discriminant Analysis Imported successfully
2023-04-13 20:56:12,313:INFO:Starting cross validation
2023-04-13 20:56:12,317:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 20:56:30,475:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:56:30,538:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:56:30,597:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:56:32,508:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:56:32,580:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:56:39,447:INFO:Calculating mean and std
2023-04-13 20:56:39,471:INFO:Creating metrics dataframe
2023-04-13 20:56:39,494:INFO:Uploading results into container
2023-04-13 20:56:39,498:INFO:Uploading model into container now
2023-04-13 20:56:39,500:INFO:_master_model_container: 11
2023-04-13 20:56:39,501:INFO:_display_container: 2
2023-04-13 20:56:39,503:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-04-13 20:56:39,503:INFO:create_model() successfully completed......................................
2023-04-13 20:56:40,186:INFO:SubProcess create_model() end ==================================
2023-04-13 20:56:40,186:INFO:Creating metrics dataframe
2023-04-13 20:56:40,204:INFO:Initializing Extra Trees Classifier
2023-04-13 20:56:40,204:INFO:Total runtime is 6.645008560021718 minutes
2023-04-13 20:56:40,210:INFO:SubProcess create_model() called ==================================
2023-04-13 20:56:40,210:INFO:Initializing create_model()
2023-04-13 20:56:40,210:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 20:56:40,210:INFO:Checking exceptions
2023-04-13 20:56:40,210:INFO:Importing libraries
2023-04-13 20:56:40,210:INFO:Copying training dataset
2023-04-13 20:56:40,467:INFO:Defining folds
2023-04-13 20:56:40,468:INFO:Declaring metric variables
2023-04-13 20:56:40,472:INFO:Importing untrained model
2023-04-13 20:56:40,477:INFO:Extra Trees Classifier Imported successfully
2023-04-13 20:56:40,483:INFO:Starting cross validation
2023-04-13 20:56:40,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 20:56:55,060:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 2.34s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:56:55,214:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 2.36s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:56:56,306:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:56:56,622:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:56:56,629:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:57:02,229:INFO:Calculating mean and std
2023-04-13 20:57:02,230:INFO:Creating metrics dataframe
2023-04-13 20:57:02,234:INFO:Uploading results into container
2023-04-13 20:57:02,234:INFO:Uploading model into container now
2023-04-13 20:57:02,236:INFO:_master_model_container: 12
2023-04-13 20:57:02,236:INFO:_display_container: 2
2023-04-13 20:57:02,242:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1, verbose=0, warm_start=False)
2023-04-13 20:57:02,242:INFO:create_model() successfully completed......................................
2023-04-13 20:57:02,582:INFO:SubProcess create_model() end ==================================
2023-04-13 20:57:02,582:INFO:Creating metrics dataframe
2023-04-13 20:57:02,602:INFO:Initializing Extreme Gradient Boosting
2023-04-13 20:57:02,602:INFO:Total runtime is 7.018298323949177 minutes
2023-04-13 20:57:02,605:INFO:SubProcess create_model() called ==================================
2023-04-13 20:57:02,605:INFO:Initializing create_model()
2023-04-13 20:57:02,607:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 20:57:02,607:INFO:Checking exceptions
2023-04-13 20:57:02,607:INFO:Importing libraries
2023-04-13 20:57:02,607:INFO:Copying training dataset
2023-04-13 20:57:02,878:INFO:Defining folds
2023-04-13 20:57:02,878:INFO:Declaring metric variables
2023-04-13 20:57:02,883:INFO:Importing untrained model
2023-04-13 20:57:02,890:INFO:Extreme Gradient Boosting Imported successfully
2023-04-13 20:57:02,897:INFO:Starting cross validation
2023-04-13 20:57:02,899:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 20:58:58,141:INFO:Calculating mean and std
2023-04-13 20:58:58,150:INFO:Creating metrics dataframe
2023-04-13 20:58:58,162:INFO:Uploading results into container
2023-04-13 20:58:58,163:INFO:Uploading model into container now
2023-04-13 20:58:58,165:INFO:_master_model_container: 13
2023-04-13 20:58:58,165:INFO:_display_container: 2
2023-04-13 20:58:58,170:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-04-13 20:58:58,170:INFO:create_model() successfully completed......................................
2023-04-13 20:58:58,760:INFO:SubProcess create_model() end ==================================
2023-04-13 20:58:58,760:INFO:Creating metrics dataframe
2023-04-13 20:58:58,784:INFO:Initializing Light Gradient Boosting Machine
2023-04-13 20:58:58,784:INFO:Total runtime is 8.954668871561685 minutes
2023-04-13 20:58:58,788:INFO:SubProcess create_model() called ==================================
2023-04-13 20:58:58,788:INFO:Initializing create_model()
2023-04-13 20:58:58,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 20:58:58,789:INFO:Checking exceptions
2023-04-13 20:58:58,789:INFO:Importing libraries
2023-04-13 20:58:58,789:INFO:Copying training dataset
2023-04-13 20:58:59,039:INFO:Defining folds
2023-04-13 20:58:59,039:INFO:Declaring metric variables
2023-04-13 20:58:59,043:INFO:Importing untrained model
2023-04-13 20:58:59,047:INFO:Light Gradient Boosting Machine Imported successfully
2023-04-13 20:58:59,055:INFO:Starting cross validation
2023-04-13 20:58:59,057:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 20:59:12,358:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.88s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:59:12,940:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:59:14,801:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.70s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:59:15,262:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:59:15,269:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:59:15,560:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:59:16,149:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:59:16,595:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 20:59:19,713:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 20:59:19,828:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:306: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 20:59:20,614:INFO:Calculating mean and std
2023-04-13 20:59:20,632:INFO:Creating metrics dataframe
2023-04-13 20:59:20,646:INFO:Uploading results into container
2023-04-13 20:59:20,649:INFO:Uploading model into container now
2023-04-13 20:59:20,651:INFO:_master_model_container: 14
2023-04-13 20:59:20,651:INFO:_display_container: 2
2023-04-13 20:59:20,652:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-04-13 20:59:20,652:INFO:create_model() successfully completed......................................
2023-04-13 20:59:21,231:INFO:SubProcess create_model() end ==================================
2023-04-13 20:59:21,231:INFO:Creating metrics dataframe
2023-04-13 20:59:21,261:INFO:Initializing CatBoost Classifier
2023-04-13 20:59:21,261:INFO:Total runtime is 9.329294117291766 minutes
2023-04-13 20:59:21,267:INFO:SubProcess create_model() called ==================================
2023-04-13 20:59:21,268:INFO:Initializing create_model()
2023-04-13 20:59:21,268:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 20:59:21,268:INFO:Checking exceptions
2023-04-13 20:59:21,268:INFO:Importing libraries
2023-04-13 20:59:21,269:INFO:Copying training dataset
2023-04-13 20:59:21,591:INFO:Defining folds
2023-04-13 20:59:21,591:INFO:Declaring metric variables
2023-04-13 20:59:21,598:INFO:Importing untrained model
2023-04-13 20:59:21,612:INFO:CatBoost Classifier Imported successfully
2023-04-13 20:59:21,622:INFO:Starting cross validation
2023-04-13 20:59:21,625:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 21:00:43,103:INFO:Calculating mean and std
2023-04-13 21:00:43,105:INFO:Creating metrics dataframe
2023-04-13 21:00:43,111:INFO:Uploading results into container
2023-04-13 21:00:43,112:INFO:Uploading model into container now
2023-04-13 21:00:43,113:INFO:_master_model_container: 15
2023-04-13 21:00:43,113:INFO:_display_container: 2
2023-04-13 21:00:43,113:INFO:<catboost.core.CatBoostClassifier object at 0x000002C4CED922E0>
2023-04-13 21:00:43,113:INFO:create_model() successfully completed......................................
2023-04-13 21:00:43,472:INFO:SubProcess create_model() end ==================================
2023-04-13 21:00:43,472:INFO:Creating metrics dataframe
2023-04-13 21:00:43,493:INFO:Initializing Dummy Classifier
2023-04-13 21:00:43,494:INFO:Total runtime is 10.699836981296537 minutes
2023-04-13 21:00:43,497:INFO:SubProcess create_model() called ==================================
2023-04-13 21:00:43,497:INFO:Initializing create_model()
2023-04-13 21:00:43,497:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4C51AC910>, model_only=True, return_train_score=False, kwargs={})
2023-04-13 21:00:43,498:INFO:Checking exceptions
2023-04-13 21:00:43,498:INFO:Importing libraries
2023-04-13 21:00:43,498:INFO:Copying training dataset
2023-04-13 21:00:43,759:INFO:Defining folds
2023-04-13 21:00:43,759:INFO:Declaring metric variables
2023-04-13 21:00:43,763:INFO:Importing untrained model
2023-04-13 21:00:43,768:INFO:Dummy Classifier Imported successfully
2023-04-13 21:00:43,774:INFO:Starting cross validation
2023-04-13 21:00:43,777:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 21:00:45,465:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-13 21:00:45,772:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-13 21:00:45,841:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-13 21:00:45,886:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-13 21:00:45,916:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-13 21:00:45,925:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-13 21:00:45,943:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-13 21:00:46,415:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-13 21:00:46,533:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-13 21:00:46,619:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-04-13 21:00:46,849:INFO:Calculating mean and std
2023-04-13 21:00:46,851:INFO:Creating metrics dataframe
2023-04-13 21:00:46,856:INFO:Uploading results into container
2023-04-13 21:00:46,857:INFO:Uploading model into container now
2023-04-13 21:00:46,857:INFO:_master_model_container: 16
2023-04-13 21:00:46,858:INFO:_display_container: 2
2023-04-13 21:00:46,858:INFO:DummyClassifier(constant=None, random_state=1, strategy='prior')
2023-04-13 21:00:46,859:INFO:create_model() successfully completed......................................
2023-04-13 21:00:47,172:INFO:SubProcess create_model() end ==================================
2023-04-13 21:00:47,172:INFO:Creating metrics dataframe
2023-04-13 21:00:47,207:INFO:Initializing create_model()
2023-04-13 21:00:47,207:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-13 21:00:47,207:INFO:Checking exceptions
2023-04-13 21:00:47,215:INFO:Importing libraries
2023-04-13 21:00:47,215:INFO:Copying training dataset
2023-04-13 21:00:47,624:INFO:Defining folds
2023-04-13 21:00:47,624:INFO:Declaring metric variables
2023-04-13 21:00:47,625:INFO:Importing untrained model
2023-04-13 21:00:47,625:INFO:Declaring custom model
2023-04-13 21:00:47,626:INFO:Decision Tree Classifier Imported successfully
2023-04-13 21:00:47,630:INFO:Cross validation set to False
2023-04-13 21:00:47,631:INFO:Fitting Model
2023-04-13 21:00:48,483:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1, splitter='best')
2023-04-13 21:00:48,483:INFO:create_model() successfully completed......................................
2023-04-13 21:00:48,883:INFO:_master_model_container: 16
2023-04-13 21:00:48,884:INFO:_display_container: 2
2023-04-13 21:00:48,884:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1, splitter='best')
2023-04-13 21:00:48,884:INFO:compare_models() successfully completed......................................
2023-04-13 21:00:48,907:INFO:Initializing create_model()
2023-04-13 21:00:48,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-13 21:00:48,907:INFO:Checking exceptions
2023-04-13 21:00:48,929:INFO:Importing libraries
2023-04-13 21:00:48,929:INFO:Copying training dataset
2023-04-13 21:00:49,199:INFO:Defining folds
2023-04-13 21:00:49,199:INFO:Declaring metric variables
2023-04-13 21:00:49,203:INFO:Importing untrained model
2023-04-13 21:00:49,207:INFO:Random Forest Classifier Imported successfully
2023-04-13 21:00:49,216:INFO:Starting cross validation
2023-04-13 21:00:49,220:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 21:00:51,836:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:00:52,961:INFO:Calculating mean and std
2023-04-13 21:00:52,966:INFO:Creating metrics dataframe
2023-04-13 21:00:52,987:INFO:Finalizing model
2023-04-13 21:00:55,094:INFO:Uploading results into container
2023-04-13 21:00:55,095:INFO:Uploading model into container now
2023-04-13 21:00:55,104:INFO:_master_model_container: 17
2023-04-13 21:00:55,104:INFO:_display_container: 3
2023-04-13 21:00:55,105:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1, verbose=0, warm_start=False)
2023-04-13 21:00:55,105:INFO:create_model() successfully completed......................................
2023-04-13 21:01:42,572:INFO:Initializing tune_model()
2023-04-13 21:01:42,572:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>)
2023-04-13 21:01:42,573:INFO:Checking exceptions
2023-04-13 21:01:42,674:INFO:Copying training dataset
2023-04-13 21:01:42,836:INFO:Checking base model
2023-04-13 21:01:42,837:INFO:Base model : Random Forest Classifier
2023-04-13 21:01:42,840:INFO:Declaring metric variables
2023-04-13 21:01:42,844:INFO:Defining Hyperparameters
2023-04-13 21:01:43,159:INFO:Tuning with n_jobs=-1
2023-04-13 21:01:43,159:INFO:Initializing RandomizedSearchCV
2023-04-13 21:01:59,777:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.49s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:01:59,815:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:01:59,905:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:01,129:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.35s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:09,638:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.38s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:10,224:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.29s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:11,539:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.95s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:11,774:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.90s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:12,612:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.20s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:13,271:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.15s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:13,871:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:13,902:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:14,427:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:14,637:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:17,742:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:230: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-04-13 21:02:19,805:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.11s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:20,883:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:21,126:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:21,789:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:22,337:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:22,372:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:22,986:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:23,586:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:23,943:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:24,152:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.74s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:24,543:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:25,102:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:25,331:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:26,038:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:27,094:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.86s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:27,131:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:27,891:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:28,720:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:28,924:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:29,300:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:30,329:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:230: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-04-13 21:02:30,728:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.88s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:33,995:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:223: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-04-13 21:02:35,277:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:230: UserWarning: Persisting input arguments took 0.90s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-04-13 21:02:49,274:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 2.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:52,588:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:53,027:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 2.30s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:02:56,942:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.87s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:02:58,672:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:223: UserWarning: Persisting input arguments took 1.10s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-04-13 21:02:59,893:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:230: UserWarning: Persisting input arguments took 0.95s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-04-13 21:03:00,910:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 2.01s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:01,348:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:223: UserWarning: Persisting input arguments took 0.87s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-04-13 21:03:01,895:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.97s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:03,794:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:04,847:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:05,653:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:230: UserWarning: Persisting input arguments took 0.87s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, y = self._memory_transform(

2023-04-13 21:03:07,011:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.25s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:07,061:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.23s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:07,243:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.31s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:08,841:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.11s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:08,922:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.09s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:08,975:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.43s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:09,089:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.09s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:10,744:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.09s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:11,497:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:223: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-04-13 21:03:11,520:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:223: UserWarning: Persisting input arguments took 0.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-04-13 21:03:11,578:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:223: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_transformer = self._memory_fit(

2023-04-13 21:03:13,385:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.05s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:14,054:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.05s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:14,746:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:15,223:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:17,904:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:18,232:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:18,526:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:18,693:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:18,909:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:18,915:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:19,445:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:21,499:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:22,433:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.86s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:22,610:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:23,226:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.19s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:23,596:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:23,695:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.83s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:23,751:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.11s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:23,915:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:24,007:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:24,783:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.52s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:26,228:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:27,226:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:27,834:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:28,131:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.12s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:28,770:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.21s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:30,062:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.11s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:31,276:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.44s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:37,635:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:37,977:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:38,069:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.91s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:38,311:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 2.19s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:41,942:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 2.23s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:42,099:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:42,159:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:42,164:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:42,967:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:44,098:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.27s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:44,842:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.99s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:44,890:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.87s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:45,483:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.14s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:48,414:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:48,910:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.12s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:49,845:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 2.23s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:50,195:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 2.16s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:51,712:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:51,778:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.06s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:52,189:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.89s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:52,453:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:53,382:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:53,835:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:53,882:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.16s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:54,168:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.85s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:54,259:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.88s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:55,433:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.30s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:56,085:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.42s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:56,098:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.29s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:56,406:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.00s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:57,265:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.55s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:57,897:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:58,429:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.76s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:58,926:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.93s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:03:59,210:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.39s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:59,346:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:03:59,349:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:00,090:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.78s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:04:00,810:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:01,342:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.60s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:01,725:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:04:02,151:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:04:02,165:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:02,293:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:02,575:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:03,092:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:03,467:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.04s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:04:03,686:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:04:03,709:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:04:04,447:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:04,613:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.86s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:05,970:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:04:06,360:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.05s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:06,623:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 1.03s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:04:07,328:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 1.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:08,287:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:04:08,343:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.84s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:08,358:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:08,517:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.82s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:09,048:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.90s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:09,864:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.94s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:04:09,873:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.92s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:04:10,053:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:295: UserWarning: Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-04-13 21:04:10,393:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.63s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:10,581:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\pycaret\internal\pipeline.py:252: UserWarning: Persisting input arguments took 0.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-04-13 21:04:11,140:INFO:best_params: {'actual_estimator__n_estimators': 90, 'actual_estimator__min_samples_split': 10, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 4, 'actual_estimator__criterion': 'entropy', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': True}
2023-04-13 21:04:11,163:INFO:Hyperparameter search completed
2023-04-13 21:04:11,163:INFO:SubProcess create_model() called ==================================
2023-04-13 21:04:11,167:INFO:Initializing create_model()
2023-04-13 21:04:11,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002C4CED73B80>, model_only=True, return_train_score=False, kwargs={'n_estimators': 90, 'min_samples_split': 10, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0001, 'max_features': 1.0, 'max_depth': 4, 'criterion': 'entropy', 'class_weight': 'balanced_subsample', 'bootstrap': True})
2023-04-13 21:04:11,168:INFO:Checking exceptions
2023-04-13 21:04:11,168:INFO:Importing libraries
2023-04-13 21:04:11,171:INFO:Copying training dataset
2023-04-13 21:04:11,546:INFO:Defining folds
2023-04-13 21:04:11,547:INFO:Declaring metric variables
2023-04-13 21:04:11,565:INFO:Importing untrained model
2023-04-13 21:04:11,566:INFO:Declaring custom model
2023-04-13 21:04:11,575:INFO:Random Forest Classifier Imported successfully
2023-04-13 21:04:11,586:INFO:Starting cross validation
2023-04-13 21:04:11,589:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 21:04:15,397:INFO:Calculating mean and std
2023-04-13 21:04:15,401:INFO:Creating metrics dataframe
2023-04-13 21:04:15,424:INFO:Finalizing model
2023-04-13 21:04:21,207:INFO:Uploading results into container
2023-04-13 21:04:21,208:INFO:Uploading model into container now
2023-04-13 21:04:21,209:INFO:_master_model_container: 18
2023-04-13 21:04:21,209:INFO:_display_container: 4
2023-04-13 21:04:21,210:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features=1.0, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0001,
                       min_samples_leaf=2, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, n_estimators=90, n_jobs=-1,
                       oob_score=False, random_state=1, verbose=0,
                       warm_start=False)
2023-04-13 21:04:21,210:INFO:create_model() successfully completed......................................
2023-04-13 21:04:21,839:INFO:SubProcess create_model() end ==================================
2023-04-13 21:04:21,839:INFO:choose_better activated
2023-04-13 21:04:21,843:INFO:SubProcess create_model() called ==================================
2023-04-13 21:04:21,843:INFO:Initializing create_model()
2023-04-13 21:04:21,845:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-04-13 21:04:21,845:INFO:Checking exceptions
2023-04-13 21:04:21,849:INFO:Importing libraries
2023-04-13 21:04:21,849:INFO:Copying training dataset
2023-04-13 21:04:22,099:INFO:Defining folds
2023-04-13 21:04:22,099:INFO:Declaring metric variables
2023-04-13 21:04:22,099:INFO:Importing untrained model
2023-04-13 21:04:22,099:INFO:Declaring custom model
2023-04-13 21:04:22,099:INFO:Random Forest Classifier Imported successfully
2023-04-13 21:04:22,100:INFO:Starting cross validation
2023-04-13 21:04:22,102:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-04-13 21:04:25,818:INFO:Calculating mean and std
2023-04-13 21:04:25,819:INFO:Creating metrics dataframe
2023-04-13 21:04:25,821:INFO:Finalizing model
2023-04-13 21:04:26,127:INFO:Uploading results into container
2023-04-13 21:04:26,129:INFO:Uploading model into container now
2023-04-13 21:04:26,129:INFO:_master_model_container: 19
2023-04-13 21:04:26,129:INFO:_display_container: 5
2023-04-13 21:04:26,129:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1, verbose=0, warm_start=False)
2023-04-13 21:04:26,129:INFO:create_model() successfully completed......................................
2023-04-13 21:04:26,436:INFO:SubProcess create_model() end ==================================
2023-04-13 21:04:26,436:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1, verbose=0, warm_start=False) result for Accuracy is 0.9998
2023-04-13 21:04:26,437:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features=1.0, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0001,
                       min_samples_leaf=2, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, n_estimators=90, n_jobs=-1,
                       oob_score=False, random_state=1, verbose=0,
                       warm_start=False) result for Accuracy is 1.0
2023-04-13 21:04:26,437:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features=1.0, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0001,
                       min_samples_leaf=2, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, n_estimators=90, n_jobs=-1,
                       oob_score=False, random_state=1, verbose=0,
                       warm_start=False) is best model
2023-04-13 21:04:26,437:INFO:choose_better completed
2023-04-13 21:04:26,451:INFO:_master_model_container: 19
2023-04-13 21:04:26,451:INFO:_display_container: 4
2023-04-13 21:04:26,451:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features=1.0, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0001,
                       min_samples_leaf=2, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, n_estimators=90, n_jobs=-1,
                       oob_score=False, random_state=1, verbose=0,
                       warm_start=False)
2023-04-13 21:04:26,451:INFO:tune_model() successfully completed......................................
2023-04-13 21:06:23,255:INFO:Initializing plot_model()
2023-04-13 21:06:23,256:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features=1.0, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0001,
                       min_samples_leaf=2, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, n_estimators=90, n_jobs=-1,
                       oob_score=False, random_state=1, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, system=True)
2023-04-13 21:06:23,256:INFO:Checking exceptions
2023-04-13 21:06:23,365:INFO:Preloading libraries
2023-04-13 21:06:23,374:INFO:Copying training dataset
2023-04-13 21:06:23,374:INFO:Plot type: feature
2023-04-13 21:06:23,375:WARNING:No coef_ found. Trying feature_importances_
2023-04-13 21:06:23,910:INFO:Visual Rendered Successfully
2023-04-13 21:06:24,235:INFO:plot_model() successfully completed......................................
2023-04-13 21:06:38,590:INFO:Initializing plot_model()
2023-04-13 21:06:38,590:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features=1.0, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0001,
                       min_samples_leaf=2, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, n_estimators=90, n_jobs=-1,
                       oob_score=False, random_state=1, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, system=True)
2023-04-13 21:06:38,590:INFO:Checking exceptions
2023-04-13 21:06:38,697:INFO:Preloading libraries
2023-04-13 21:06:38,706:INFO:Copying training dataset
2023-04-13 21:06:38,707:INFO:Plot type: auc
2023-04-13 21:06:39,368:INFO:Fitting Model
2023-04-13 21:06:39,373:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-04-13 21:06:39,374:INFO:Scoring test/hold-out set
2023-04-13 21:06:39,703:INFO:Visual Rendered Successfully
2023-04-13 21:06:40,043:INFO:plot_model() successfully completed......................................
2023-04-13 21:07:11,669:INFO:Initializing plot_model()
2023-04-13 21:07:11,669:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='entropy',
                       max_depth=4, max_features=1.0, max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.0001,
                       min_samples_leaf=2, min_samples_split=10,
                       min_weight_fraction_leaf=0.0, n_estimators=90, n_jobs=-1,
                       oob_score=False, random_state=1, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C4CEC00D90>, system=True)
2023-04-13 21:07:11,669:INFO:Checking exceptions
2023-04-13 21:07:11,775:INFO:Preloading libraries
2023-04-13 21:07:11,782:INFO:Copying training dataset
2023-04-13 21:07:11,784:INFO:Plot type: confusion_matrix
2023-04-13 21:07:12,411:INFO:Fitting Model
2023-04-13 21:07:12,411:WARNING:C:\Users\Kim\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-04-13 21:07:12,412:INFO:Scoring test/hold-out set
2023-04-13 21:07:12,650:INFO:Visual Rendered Successfully
2023-04-13 21:07:12,990:INFO:plot_model() successfully completed......................................
